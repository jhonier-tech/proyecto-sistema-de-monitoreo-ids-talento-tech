#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
M칩dulo para el di치logo Acerca de
"""

from PyQt5.QtWidgets import (QDialog, QVBoxLayout, QHBoxLayout, QLabel, 
                           QPushButton, QTabWidget, QWidget, QTextBrowser)
from PyQt5.QtGui import QIcon, QPixmap, QFont
from PyQt5.QtCore import Qt, QSize

from utils.icons import get_icon_path

class AboutDialog(QDialog):
    """Di치logo para mostrar informaci칩n sobre la aplicaci칩n"""
    
    def __init__(self, parent=None):
        """Inicializa el di치logo Acerca de
        
        Args:
            parent: Widget padre
        """
        super().__init__(parent)
        
        # Configurar ventana
        self.setWindowTitle("Acerca del Sistema de monitoreo IDS")
        self.setWindowIcon(QIcon(get_icon_path("about")))
        self.resize(500, 400)
        
        # Configurar interfaz
        self.setup_ui()
        
    def setup_ui(self):
        """Configura la interfaz de usuario"""
        # Layout principal
        layout = QVBoxLayout(self)
        
        # Cabecera
        header_layout = QHBoxLayout()
        
        # Logo
        logo_label = QLabel()
        logo_path = get_icon_path("app_icon")
        
        # Intentar cargar el icono como .ico primero
        logo_pixmap = QPixmap(logo_path)
        
        # Si el icono se carg칩 correctamente y no est치 vac칤o
        if logo_pixmap and not logo_pixmap.isNull():
            logo_label.setPixmap(logo_pixmap.scaled(64, 64, Qt.KeepAspectRatio, Qt.SmoothTransformation))
        else:
            # Logo de fallback (texto)
            logo_label.setText("游댌")
            logo_label.setFont(QFont("Arial", 32))
            
        header_layout.addWidget(logo_label)
        
        # Informaci칩n b치sica
        info_layout = QVBoxLayout()
        
        title_label = QLabel("Sistema de monitoreo IDS")
        title_label.setFont(QFont("Arial", 16, QFont.Bold))
        info_layout.addWidget(title_label)
        
        version_label = QLabel("Versi칩n 1.0.0")
        info_layout.addWidget(version_label)
        
        desc_label = QLabel("Analizador de paquetes de red con interfaz gr치fica")
        info_layout.addWidget(desc_label)
        
        copyright_label = QLabel("춸 2025")
        copyright_label.setFont(QFont("Arial", 8))
        info_layout.addWidget(copyright_label)
        
        header_layout.addLayout(info_layout)
        header_layout.addStretch()
        
        layout.addLayout(header_layout)
        
        # Pesta침as de informaci칩n
        tab_widget = QTabWidget()
        
        # Pesta침a "Acerca de"
        about_tab = QWidget()
        about_layout = QVBoxLayout(about_tab)
        
        about_text = QTextBrowser()
        about_text.setOpenExternalLinks(True)
        about_text.setHtml("""
            <p>Sistema de monitoreo IDS es un analizador de paquetes de red con interfaz gr치fica,
            inspirado en Wireshark, desarrollado en Python.</p>
            
            <p>Caracter칤sticas principales:</p>
            <ul>
                <li>Captura de paquetes de red en tiempo real</li>
                <li>An치lisis detallado de protocolos</li>
                <li>Interfaz gr치fica intuitiva y atractiva</li>
                <li>Filtrado de paquetes</li>
                <li>Visualizaci칩n gr치fica de tr치fico de red</li>
                <li>Estad칤sticas en tiempo real</li>
            </ul>
            
            <p>Esta aplicaci칩n es software libre y de c칩digo abierto.</p>
        """)
        about_layout.addWidget(about_text)
        
        tab_widget.addTab(about_tab, "Acerca de")
        
        # Pesta침a "Autores"
        authors_tab = QWidget()
        authors_layout = QVBoxLayout(authors_tab)
        
        authors_text = QTextBrowser()
        authors_text.setOpenExternalLinks(True)
        authors_text.setHtml("""
            <p><b>Desarrolladores:</b></p>
            <ul>
                <li>Equipo de desarrollo</li>
            </ul>
            
            <p><b>Agradecimientos:</b></p>
            <ul>
                <li>Proyecto Scapy - <a href="https://scapy.net/">https://scapy.net/</a></li>
                <li>Proyecto PyQt - <a href="https://riverbankcomputing.com/software/pyqt/">https://riverbankcomputing.com/software/pyqt/</a></li>
                <li>Proyecto Wireshark - <a href="https://www.wireshark.org/">https://www.wireshark.org/</a></li>
            </ul>
        """)
        authors_layout.addWidget(authors_text)
        
        tab_widget.addTab(authors_tab, "Autores")
        
        # Pesta침a "Licencia"
        license_tab = QWidget()
        license_layout = QVBoxLayout(license_tab)
        
        license_text = QTextBrowser()
        license_text.setHtml("""
            <p><b>Licencia de Software Libre</b></p>
            
            <p>Este programa es software libre: puede redistribuirlo y/o modificarlo bajo los 
            t칠rminos de la Licencia P칰blica General GNU publicada por la Free Software 
            Foundation, ya sea la versi칩n 3 de la Licencia, o (a su elecci칩n) cualquier 
            versi칩n posterior.</p>
            
            <p>Este programa se distribuye con la esperanza de que sea 칰til, pero SIN NINGUNA 
            GARANT칈A; sin siquiera la garant칤a impl칤cita de COMERCIABILIDAD o APTITUD PARA UN 
            PROP칍SITO PARTICULAR. Consulte la Licencia P칰blica General GNU para m치s detalles.</p>
        """)
        license_layout.addWidget(license_text)
        
        tab_widget.addTab(license_tab, "Licencia")
        
        # Pesta침a "Bibliotecas"
        libraries_tab = QWidget()
        libraries_layout = QVBoxLayout(libraries_tab)
        
        libraries_text = QTextBrowser()
        libraries_text.setOpenExternalLinks(True)
        libraries_text.setHtml("""
            <p><b>Bibliotecas utilizadas:</b></p>
            <ul>
                <li>Python 3.8+</li>
                <li>Scapy - Biblioteca para manipulaci칩n de paquetes de red</li>
                <li>PyQt5 - Interfaz gr치fica</li>
                <li>PyQtGraph - Visualizaci칩n de datos</li>
                <li>Matplotlib - Gr치ficos y visualizaciones</li>
                <li>Pandas - An치lisis de datos</li>
                <li>NumPy - Computaci칩n cient칤fica</li>
            </ul>
        """)
        libraries_layout.addWidget(libraries_text)
        
        tab_widget.addTab(libraries_tab, "Bibliotecas")
        
        layout.addWidget(tab_widget)
        
        # Bot칩n Cerrar
        button_layout = QHBoxLayout()
        button_layout.addStretch()
        
        close_button = QPushButton("Cerrar")
        close_button.setDefault(True)
        close_button.clicked.connect(self.accept)
        button_layout.addWidget(close_button)
        
        layout.addLayout(button_layout)
